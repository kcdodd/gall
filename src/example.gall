(
  "Example Function Call" #print.*|
  1; 2;,3;,4;, #sum.* #print.*|  // -> 10
);

(
  "Example Indexing" #print.*|

  "a"; "b";, "c";,
  (
    $0. #print.*|
    $1. #print.*|
    $2. #print.*|
  )*|
);,

(
  "Example Key-Value Objects" #print.*|

  void
    o
      void
        a "hello"!
        b "goodbye"!
        c "wubalubadubdub"!
    !
  (
    $o.a. #print.*| // -> hello
    $o.b. #print.*| // -> goodbye
    $o.c. #print.*| // -> wubalubadubdub
  )*|
);,

(
  "Example Function Import" #print.*|

  void impAddOne @"./addOne.gall".!
  (
    2 $impAddOne.* #print.*| // -> 3
  )*|
);,

(
  "Example Curry Definition" #print.*|

  void e 2.71828182845904!
  (
    void exp (#e.; $;, #pow.*|)!
    (
      2 $exp.* #print.*| // -> 7.38905...
    )*|
  )*|
);,

(
  "Example If-Then-Else" #print.*|

  void
    f (
      void
        true "yes"! // define true to be yes
        false "no"! // define false to be no
      $; 1;, #eq.*|.
    )!
  (
    0 $f.*| #print.*| // -> no
    1 $f.*| #print.*| // -> yes
    2 $f.*| #print.*| // -> no
  )*|
);,

(
  "Example Iteration" #print.*|

  void w (
    void
      count $!
      repeat (
        $count. #print.*|
        void
          true "done" #print.*! // terminal case
          false  // loop case take advantage of tail-call recursion
            $count $count.; 1;, #diff.*|!
            $repeat.*
          !
        ($ #count.; 0;, #eq.*|.|)*| // loop condition
      )!
    ($ $repeat.*|)*|
  )!
  (
    5 $w.*| // -> 5, 4, 3, 2, 1, 0, done
  )*|
);,

(
  "Example Factorial" #print.*|

  void factorial (
    void
      n $!
      repeat (
        $
          true (1)! // terminal case
          false  // loop case take advantage of tail-call recursion
            ($n $n.; 1;, #diff.*|! $repeat.*|; $n.;, #prod.*|)
          !
        ($ $ $n.; 0;, #eq.*|.*|)*| // loop condition
      )!
    ($ $repeat.*|)*|
  )!
  (
    10 $factorial.* #print.*| // -> 3,628,800
  )*|
);,

($x.|)/|
